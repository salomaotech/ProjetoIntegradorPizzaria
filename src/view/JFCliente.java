package view;

import daobanco.BancoDados;
import java.util.LinkedHashMap;
import java.util.Map;
import static java.util.Objects.isNull;
import javax.swing.JOptionPane;
import sistema.Algoritmos;
import sistema.VariaveisTemporarias;

/**
 *
 * @author Salomão Francisco da Silva - Fone: 62 99447-4551
 * @version 1.0
 */
public class JFCliente extends javax.swing.JFrame {

    private String id;

    public JFCliente() {

        // inicializa os componentes
        initComponents();

        // cria a tabela do cliente
        criaTabela();

        // carrega os dados
        carregaDados();

    }

    // cria a tabela do cliente
    private void criaTabela() {

        BancoDados banco = new BancoDados();
        Map colunas = new LinkedHashMap();
        colunas.put("cpf", "varchar(20)");
        colunas.put("nome", "varchar(256)");
        colunas.put("telefone", "varchar(20)");
        colunas.put("endereco", "varchar(256)");
        colunas.put("cidade", "varchar(128)");
        colunas.put("uf", "varchar(2)");
        colunas.put("cep", "varchar(20)");
        banco.criarTabela(colunas, "tb_cliente");

    }

    // carrega os dados pelo id
    private void carregaDados() {

        // id
        id = VariaveisTemporarias.getID(true);

        // valida se o id não é nulo
        if (isNull(id) == false) {

            // recupera os dados do banco
            BancoDados banco = new BancoDados();
            Map dados = banco.recuperaDadosChavePrimaria("id", id, "tb_cliente");

            // uf
            String uf = (String) dados.get("uf");

            // seta os dados
            JTNome.setText((String) dados.get("nome"));
            JTCpf.setText((String) dados.get("cpf"));
            JTFone.setText((String) dados.get("telefone"));
            JTEndereco.setText((String) dados.get("endereco"));
            JTCep.setText((String) dados.get("cep"));
            JTCidade.setText((String) dados.get("cidade"));
            JCUf.setSelectedItem(uf.toUpperCase());

            // seta campos
            jButton3.setVisible(false);
            jButton2.setEnabled(true);
            jButton1.setText("Atualizar");
            JTCpf.setEnabled(false);

        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        JTCpf = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        JTNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        JTFone = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        JTEndereco = new javax.swing.JTextField();
        JTCep = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        JTCidade = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        JCUf = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de cliente");
        setResizable(false);

        jLabel1.setText("CPF:");

        jLabel2.setText("Nome:");

        jLabel3.setText("Fone:");

        jLabel4.setText("End:");

        jLabel5.setText("Cep:");

        jLabel6.setText("Cidade:");

        jLabel7.setText("UF:");

        JCUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));

        jButton1.setText("Cadastrar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Excluir");
        jButton2.setEnabled(false);
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Pesquisar");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel7)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING))
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(JTCpf, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(jLabel3)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(JTFone, javax.swing.GroupLayout.DEFAULT_SIZE, 312, Short.MAX_VALUE))
                                .addComponent(JTEndereco)
                                .addComponent(JTNome))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(JCUf, 0, 150, Short.MAX_VALUE)
                                    .addComponent(JTCep))
                                .addGap(18, 18, 18)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(JTCidade, javax.swing.GroupLayout.DEFAULT_SIZE, 299, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(JTNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(JTCpf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(JTFone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JTEndereco, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(JTCep, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(JTCidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(JCUf, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2)
                    .addComponent(jButton3))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    // valida os campos
    private boolean validarCampos() {

        boolean validado = true;

        // banco
        BancoDados banco = new BancoDados();

        // valida se o campo foi preenchido
        if (JTNome.getText().length() == 0) {

            // mensagem
            JOptionPane.showMessageDialog(null, "O nome não pode ficar em branco.");
            JTNome.requestFocus();

            // não validado
            validado = false;

        }

        // valida se o campo foi preenchido
        if (JTCpf.getText().length() == 0) {

            // mensagem
            JOptionPane.showMessageDialog(null, "O CPF não pode ficar em branco.");
            JTCpf.requestFocus();

            // não validado
            validado = false;

        }

        // valida se o campo foi preenchido
        if (JTFone.getText().length() == 0) {

            // mensagem
            JOptionPane.showMessageDialog(null, "O fone não pode ficar em branco.");
            JTFone.requestFocus();

            // não validado
            validado = false;

        }

        // valida se o campo foi preenchido
        if (JTEndereco.getText().length() == 0) {

            // mensagem
            JOptionPane.showMessageDialog(null, "O endereço não pode ficar em branco.");
            JTEndereco.requestFocus();

            // não validado
            validado = false;

        }

        // valida se o campo foi preenchido
        if (JTCep.getText().length() == 0) {

            // mensagem
            JOptionPane.showMessageDialog(null, "O cep não pode ficar em branco.");
            JTCep.requestFocus();

            // não validado
            validado = false;

        }

        // valida se o campo foi preenchido
        if (JTCidade.getText().length() == 0) {

            // mensagem
            JOptionPane.showMessageDialog(null, "A cidade não pode ficar em branco.");
            JTCidade.requestFocus();

            // não validado
            validado = false;

        }

        // valida se o campo foi preenchido
        if (JCUf.getSelectedItem().toString().length() == 0) {

            // mensagem
            JOptionPane.showMessageDialog(null, "O UF não pode ficar em branco.");
            JCUf.requestFocus();

            // não validado
            validado = false;

        }

        // valida id
        if (isNull(id) == true) {

            // valida se o cpf já existe
            if (banco.isRegistroExiste("tb_cliente", "cpf", this.JTCpf.getText()) == true) {

                // mensagem
                JOptionPane.showMessageDialog(null, "Cliente já cadastrado por cpf.");
                this.JTCpf.requestFocus();

                // não validado
                validado = false;

            }

        }

        // retorno
        return validado;

    }

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

        // valida campos
        if (validarCampos() == true) {

            // insere dados na tabela
            BancoDados banco = new BancoDados();
            Map dados = new LinkedHashMap();
            dados.put("cpf", this.JTCpf.getText());
            dados.put("nome", this.JTNome.getText());
            dados.put("telefone", this.JTFone.getText());
            dados.put("endereco", this.JTEndereco.getText());
            dados.put("cidade", this.JTCidade.getText());
            dados.put("uf", this.JCUf.getSelectedItem());
            dados.put("cep", this.JTCep.getText());

            // se não houver id cadastra, caso contrário atualiza
            if (isNull(this.id) == true) {

                banco.inserirDados(dados, "tb_cliente");

            } else {

                dados.put("id", this.id);
                banco.AtualizarDados(dados, "tb_cliente");

            }

            // mensagem de sucesso
            Algoritmos.dialogo("Gravado com sucesso!");
            this.dispose();

        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        // abre janela
        JFClienteView janela = new JFClienteView();
        janela.setVisible(true);

        // fecha a janela atual
        this.setVisible(false);
        this.dispose();

    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

        BancoDados banco = new BancoDados();
        if (banco.removeRegistroChavePrimaria("id", id, "tb_cliente", "Remover cliente?") == true) {

            // fecha a janela atual
            this.setVisible(false);
            this.dispose();

        }

    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFCliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFCliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> JCUf;
    private javax.swing.JTextField JTCep;
    private javax.swing.JTextField JTCidade;
    private javax.swing.JTextField JTCpf;
    private javax.swing.JTextField JTEndereco;
    private javax.swing.JTextField JTFone;
    private javax.swing.JTextField JTNome;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    // End of variables declaration//GEN-END:variables
}
